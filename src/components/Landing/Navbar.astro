---
import { IconMenu4 } from "@tabler/icons-react";
import NavLinks from "./NavLinks.astro";
---

<nav>
  <h4>Saurabh</h4>
  <div class="desktop-nav">
    <NavLinks />
  </div>
  <div class="mobile-nav">
    <button id="menu-btn">
      <IconMenu4 size="25" />
    </button>
    <div class="menu-container">
      <NavLinks />
    </div>
  </div>
</nav>
<style lang="scss" is:global>
  @use "@/styles/abstract" as *;

  nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 20px 0;
    gap: 60px;
    position: relative;
    z-index: 1;

    h4 {
      font-family: "Great Vibes", serif;
      font-weight: 300;
      font-style: normal;
      font-size: 3rem;
      color: $primary-accent;
    }

    .nav-list {
      list-style: none;
      display: flex;
      font-weight: 500;
      align-items: center;

      li {
        button {
          color: $dark-text;
          border: none;
          background: none;
          font-size: inherit;
          font-weight: 600;
          &:hover {
            color: $primary-accent;
            cursor: pointer;
          }
          &.contact-btn {
            padding: 0.8rem 1.6rem;
            border-radius: 100px;
            outline: none;
            border: none;
            background: $dark-text;
            color: $light-bg;
            cursor: pointer;
            transition: 0.1s ease;
            font-weight: 600;
            font-size: 1rem;

            p {
              pointer-events: none;
              cursor: pointer;
            }

            &:hover {
              background: $primary-accent;
              color: $light-bg;
            }
          }
        }
      }
    }

    .desktop-nav {
      display: flex;
      justify-content: space-between;
      align-items: center;
      gap: 40px;

      @include responsive(tablet) {
        display: none;
      }

      .nav-list {
        gap: 40px;
      }
    }
    .mobile-nav {
      display: none;
      position: relative;

      @include responsive(tablet) {
        display: block;
      }

      #menu-btn {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 50px;
        width: 50px;
        border-radius: 50%;
        border: none;
        background: $dark-text;
        color: $light-bg;
        position: relative;
        cursor: pointer;

        svg {
          pointer-events: none;
        }

        z-index: 1;
      }

      .menu-container {
        background: $dark-text;
        overflow: hidden;
        position: absolute;
        right: 0;
        top: 0;
        border-radius: 25px;
        height: 0px;
        width: 0px;
        overflow: hidden;
        .nav-list {
          display: flex;
          align-items: flex-start;
          justify-content: center;
          flex-direction: column;
          margin: 40px;
          gap: 20px;

          li {
            button {
              font-size: 1.2rem;
              color: $light-bg;

              &:hover {
                color: $primary-accent;
                cursor: pointer;
              }
            }
          }
          .contact-btn {
            font-size: 1.2rem;
            background: $primary-accent;
            border-radius: 15px;
            color: $light-bg !important;
          }
        }
      }
    }
  }
</style>
<script>
  import { parallaxIt, resetParallax } from "@/utils/animations";
  import gsap from "gsap";
  const menuBtn = document.getElementById("menu-btn");
  const navMenu = document.querySelector(".menu-container");

  const openMenu = gsap.timeline({ paused: true });

  openMenu
    .to(menuBtn, { x: 0, y: 0 })
    .to(
      ".menu-container",
      {
        height: "16rem",
        width: "auto",
        duration: 0.3,
        ease: "power4.out",
      },
      "<"
    )
    .to(menuBtn, { background: "none" }, "<")
    .from(
      ".menu-container li",
      {
        y: 20,
        opacity: 0,
        stagger: 0.1,
        duration: 0.2,
      },
      "<0.05"
    );

  menuBtn?.addEventListener("click", (e) => {
    e.stopPropagation();
    if (openMenu.isActive() || openMenu.progress() === 1) {
      openMenu.reverse();
    } else {
      openMenu.play();
    }
  });

  const svg = menuBtn?.querySelector("svg") as SVGElement;

  menuBtn?.addEventListener("mouseleave", (e) => {
    resetParallax({
      container: e.currentTarget as HTMLDivElement,
      child: svg,
    });
  });
  menuBtn?.addEventListener("mousemove", (e) => {
    e.currentTarget &&
      parallaxIt({
        e: e,
        child: svg,
        container: e.currentTarget as HTMLDivElement,
        movement: 20,
      });
  });

  navMenu?.addEventListener("click", (e) => {
    console.log("clicked");
    e.stopPropagation();
  });

  window.addEventListener("click", (e) => {
    openMenu.reverse();
  });
</script>
