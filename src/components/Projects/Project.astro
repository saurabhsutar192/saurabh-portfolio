---
import { Image } from "astro:assets";

interface IProjectProps {
  name: string;
  img: ImageMetadata;
  desc: string;
  link: string;
}

const { name, img, desc, link } = Astro.props as IProjectProps;
---

<div class="project-card">
  <Image src={img} alt={name} />

  <div class="attributes">
    <div class="name-desc">
      <h4>{name}</h4>
      <p>{desc}</p>
    </div>
    <button><a href={link} target="_blank">Visit</a></button>
  </div>
</div>

<style lang="scss">
  @use "@/styles/abstract" as *;

  .project-card {
    background: white;
    padding: 1.5rem;
    border-radius: 1rem;
    flex: 1;
    min-width: 20rem;
    border: 1px solid $light-border;
    position: relative;
    overflow: hidden;

    img {
      height: 15rem;
      width: 100%;
      object-fit: cover;
      border-radius: 0.5rem;
      object-position: top;
      border: 1px solid $light-border;
    }
    &:nth-child(3) {
      img {
        object-position: left top;
      }
    }
    .attributes {
      padding: 1.5rem 0 0.5rem;
      display: flex;
      gap: 2rem;
      justify-content: space-between;
      align-items: flex-start;

      h4 {
        font-size: 2rem;
        font-weight: 500;
        line-height: 2rem;
        margin-bottom: 0.5rem;
      }
      p {
        line-height: 1.2rem;
        font-size: 0.8rem;
      }

      button {
        min-width: fit-content;
        border-radius: 0.5rem;
        outline: none;
        border: none;
        overflow: hidden;
        a {
          width: 100%;
          height: 100%;
          display: block;
          padding: 0.8rem 1.6rem;
          background: $light-text;
          color: $light-bg;
          cursor: pointer;
          transition: 0.1s ease;
          font-weight: 600;
          font-size: 1rem;

          &:hover {
            background: $primary-accent;
            color: $light-bg;
          }
        }
      }
    }
  }
</style>
<script>
  import { resetParallax } from "@/utils/animations";
  import { parallaxIt } from "@/utils/animations";

  const projectCards = document.querySelectorAll(
    ".project-card"
  ) as NodeListOf<HTMLDivElement>;

  projectCards.forEach((card) => {
    const img = card.querySelector("img") as HTMLImageElement;

    card.addEventListener("mousemove", (e) => {
      e.currentTarget &&
        parallaxIt({
          e: e,
          child: img,
          container: e.currentTarget as HTMLDivElement,
          movement: 2,
          parallaxMultiplier: 0.5,
        });
    });
    card.addEventListener("mouseleave", (e) => {
      resetParallax(e.currentTarget as HTMLDivElement, img);
    });
  });
</script>
